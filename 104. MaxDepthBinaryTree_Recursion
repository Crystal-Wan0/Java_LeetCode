// 104. Maximum Depth of Binary Tree
// Given the root of a binary tree, return its maximum depth.

// A binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.

// Input: root = [3,9,20,null,null,15,7]
// Output: 3

// Input: root = [1,null,2]
// Output: 2

class Solution {
    int res=0;
    public int maxDepth(TreeNode root) {
        int count=0;
        helper(root,count);
        return res;
    }
    //dfs
    public void helper(TreeNode root,int count){
        if(root==null) return;
        count=count+1;
        if(root.left==null && root.right==null){
            res=Math.max(res,count);
        }
        helper(root.left,count);
        helper(root.right,count);
    }
}

class Solution {
    public int maxDepth(TreeNode root) {
        if (root == null) {
            return 0;
        }
        
        return 1 + Math.max(maxDepth(root.left), maxDepth(root.right)); 
    }
}
