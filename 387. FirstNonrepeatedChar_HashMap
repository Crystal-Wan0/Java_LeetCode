// 387. First Unique Character in a String
// Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

// Input: s = "leetcode"
// Output: 0

// Input: s = "loveleetcode"
// Output: 2

// Input: s = "aabb"
// Output: -1

class Solution {
    public int firstUniqChar(String s) {
        int[] charArray = new int[26];
        for(int i = 0; i < s.length(); i++){
            charArray[s.charAt(i) - 'a']++;
        }
        for(int j = 0; j < s.length(); j++){
            if(charArray[s.charAt(j) - 'a'] == 1){
                return j;
            }
        }
        return -1;
    }
}

public int firstUniqChar(String s) {
        Map<Character, Integer> table = new HashMap<>();
        
        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            table.put(c, table.getOrDefault(c, 0) + 1);
        }
        
        for(int i = 0; i < s.length(); i++) {            
            if(table.get(s.charAt(i)) == 1) return i;
        }
        
        return -1;
        
    }
