// 100. Same Tree
// Given the roots of two binary trees p and q, write a function to check if they are the same or not.

// Two binary trees are considered the same if they are structurally identical, and the nodes have the same value.

// Input: p = [1,2,3], q = [1,2,3]
// Output: true

// Input: p = [1,2], q = [1,null,2]
// Output: false

// Input: p = [1,2,1], q = [1,1,2]
// Output: false
    
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        //both are null,so same tree
        if(p == null && q== null)
            return true;
        //any one is null, different tree
        if (q == null || p == null) 
            return false;
        //values are not same. So, different tree
        if(p.val !=q.val)
            return false;
        //recursion of left subtree and right subtree
        return (isSameTree(p.left,q.left)&&isSameTree(p.right,q.right));
    }
}

class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p==null && q==null) return true;
        if(p==null || q==null) return false;
        return (p.val==q.val) && isSameTree(p.left,q.left)&&isSameTree(p.right,q.right);
    }
}
